# install.packages("RSocrata")
library("RSocrata")
library(tidyverse)
Sys.getenv("EMAIL")
# download longitudinal Covid WW concentration data from API
covid <- read.socrata(
"https://data.cdc.gov/resource/g653-rqe2.json",
app_token = Sys.getenv("TOKEN"),
email     = Sys.getenv("EMAIL"),
password  = Sys.getenv("PASSWORD")
) %>%
mutate(date_downloaded = Sys.Date())
# load libraries
library(tidyverse)
library(here)
list.files()
list.files("data")
list.files(here::here("data"))
list.files(here::here("source"))
source(here::here("source", "01_data_download.R"))
dim(covid)
list.files(here("source"))
source(here("source", "02_data_cleaning.R"))
source(here("source", "03_data_analysis.R"))
load(here::here("Data", "clean.Rdata"))
load(here::here("data", "clean.Rdata"))
library(tidyverse)
# make table of the median/IQR covid concentration by county
# I will make this prettier
covid %>%
group_by(county) %>%
summarize(median = median(concentration),
q25 = quantile(concentration, probs = .25),
q75 = quantile(concentration, probs = .75),
population_served = mean(population_served)) %>%
ungroup() %>%
arrange(median)
source(here("source", "04_data_vizualization.R"))
load(here::here("data", "clean.Rdata"))
library(tidyverse)
# make table of the median/IQR covid concentration by county
# I will make this prettier
covid_table =  covid %>%
group_by(county) %>%
summarize(median = median(concentration),
q25 = quantile(concentration, probs = .25),
q75 = quantile(concentration, probs = .75),
population_served = mean(population_served)) %>%
ungroup() %>%
arrange(median)
covid_table %>%
knitr::kable()
covid_table %>%
knitr::kable(digits = 4)
covid_table %>%
knitr::kable(digits = 3)
load(here::here("data", "clean.Rdata"))
library(tidyverse)
library(forcats)
plot1 = covid %>%
mutate(county = factor(county),
county = fct_reorder(county, concentration)) %>%
ggplot(aes(county, concentration, group = county, fill = county)) +
geom_boxplot() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1))
## gonna do something here with the dates to make this prettier.
## weird that the scales are so different across sites
plot2 = covid %>%
ggplot(aes(date, concentration, group = interaction(county, wwtp_id))) +
geom_line() +
facet_wrap(~county, scales = "free")
source(here("source", "04_data_vizualization.R"))
plot1
plot2
plot1
rm(state)
is.null(state)
exists(state)
exists("state")
state = "ga"
exists("state")
rm(state)
# set up a variable to define which state you want to analyze
if(!exists("state")){
state = "ga"
}
?toupper
download_raw_data = params$download_raw_data
source(here("source", "02_data_cleaning.R"))
list.files()
list.files("data")
load(here::here("data", raw.Rdata))
load(here::here("data", "clean.Rdata"))
covid
file.exists(here::here("data", "clean.Rdata"))
Sys.Date()
rm(list = ls())
# set up a variable to define which state you want to analyze
if(!exists("state")){
state = "ga"
}
# download raw data
source(here::here("source", "01_data_download.R"))
covid
# grab only observations from the specified state
covid = covid %>%
filter(grepl(state, key_plot_id))
# only include columns from counties dataset we are interested in
counties = counties %>%
filter(grepl(state, key_plot_id)) %>%
select(key_plot_id, wwtp_id, county = county_names,
county_fips, population_served) %>%
distinct()
# merge covid data with the county label information
# convert  variables from character to numeric
# concentration variable more intuitive name
covid = left_join(covid, counties, by = "key_plot_id") %>%
select(-key_plot_id) %>%
mutate(pcr_conc_lin = as.numeric(pcr_conc_lin),
population_served = as.numeric(population_served)) %>%
rename(concentration = pcr_conc_lin)
names(covid)
rm(counties)
## save intermediate data object and data data was accessed
save(covid, file = here::here("data", "clean.Rdata"))
rm(list = ls())
load(here::here("data", "clean.Rdata"))
covid$date_downloaded
unique(covid$date_downloaded)
rm(list = ls())
# Chunk 1: setup
library(tidyverse)
library(here)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.width = 9,
fig.height = 6,
fig.path = "../results/"
)
theme_set(theme_bw() + theme(legend.position = "bottom"))
# Chunk 2: set_params
state = params$state
download_raw_data = params$download_raw_data
# Chunk 3
if(download_raw_data){
download_date = Sys.Date()
}else{
load(here::here("data", "clean.Rdata"))
download_date = unique(covid$date_downloaded)
rm(covid)
}
# Chunk 4
if(download_raw_data){
source(here("source", "02_data_cleaning.R"))
}
if(!file.exists(here::here("data", "clean.Rdata"))){
source(here("source", "02_data_cleaning.R"))
}
# Chunk 5
source(here("source", "03_data_analysis.R"))
# Chunk 6
covid_table %>%
knitr::kable()
source(here("source", "04_data_visualization.R"))
plot1
plot2
rm(list = ls())
# Chunk 1: setup
library(tidyverse)
library(here)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.width = 9,
fig.height = 6,
fig.path = "../results/"
)
theme_set(theme_bw() + theme(legend.position = "bottom"))
# Chunk 2: set_params
state = params$state
download_raw_data = params$download_raw_data
# Chunk 3
if(download_raw_data){
download_date = Sys.Date()
}else if(!file.exists(here::here("data", "clean.Rdata"))){
source(here("source", "02_data_cleaning.R"))
}else{
load(here::here("data", "clean.Rdata"))
download_date = unique(covid$date_downloaded)
rm(covid)
}
if(download_raw_data){
source(here("source", "02_data_cleaning.R"))
}
source(here("source", "03_data_analysis.R"))
covid_table %>%
knitr::kable()
source(here("source", "04_data_visualization.R"))
plot1
rm(list = ls())
# Chunk 1: setup
library(tidyverse)
library(here)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.width = 9,
fig.height = 6,
fig.path = "../results/"
)
theme_set(theme_bw() + theme(legend.position = "bottom"))
# Chunk 2: set_params
state = params$state
download_raw_data = params$download_raw_data
if(download_raw_data){
download_date = Sys.Date()
}else if(!file.exists(here::here("data", "clean.Rdata"))){
source(here("source", "02_data_cleaning.R"))
}else{
load(here::here("data", "clean.Rdata"))
download_date = unique(covid$date_downloaded)
rm(covid)
}
if(download_raw_data){
source(here("source", "02_data_cleaning.R"))
}
source(here("source", "01_data_download.R"))
source(here("source", "02_data_cleaning.R"))
source(here("source", "03_data_analysis.R"))
covid_table %>%
knitr::kable()
source(here("source", "04_data_visualization.R"))
plot1
rm(list = ls())
list.files(here::here("source"))
source(here::here("source", "01_data_download.R"))
covid
range(covid$pcr_conc_lin)
rm(list = ls())
rmarkdown::render("final_report.Rmd", params = list(
state = "nj",
download_raw_data = FALSE
))
rmarkdown::render(here::here("final_report.Rmd"), params = list(
state = "nj",
download_raw_data = FALSE
))
rmarkdown::render(here::here("analysis","final_report.Rmd"), params = list(
state = "nj",
download_raw_data = FALSE
))
render_report = function(state, download_raw_data = FALSE) {
filename = paste0("Report-", state, "-", download_raw_data, ".html")
rmarkdown::render(here::here("analysis","final_report.Rmd"), params = list(
state = state,
download_raw_data = download_raw_data
),
output_file = here::here("results", filename)
)
}
lapply(c("ga", "co", "ny", "pa", "nj"), render_report)
rm(list = ls())
render_report = function(state, download_raw_data = FALSE) {
filename = paste0("Report-", state, "-", download_raw_data, ".html")
rmarkdown::render(here::here("analysis","final_report.Rmd"), params = list(
state = state,
download_raw_data = download_raw_data
),
output_file = here::here("results", filename)
)
}
lapply(c("ga", "co", "ny", "pa", "nj"), render_report)
rm(list = ls())
render_report = function(state, download_raw_data = FALSE) {
filename = paste0("Report-", state, "-", download_raw_data, ".html")
rmarkdown::render(here::here("analysis","final_report.Rmd"), params = list(
state = state,
download_raw_data = download_raw_data
),
output_file = here::here("results", filename)
)
}
lapply(c("ga", "co", "ny", "pa", "nj"), render_report)
rm(list = ls())
render_report = function(state, download_raw_data = FALSE) {
filename = paste0("Report-", state, "-", download_raw_data, ".html")
rmarkdown::render(here::here("analysis","final_report.Rmd"), params = list(
state = state,
download_raw_data = download_raw_data
),
output_file = here::here("results", filename)
)
}
lapply(c("ga", "co", "ny", "pa", "nj"), render_report)
list.files("data")
rmarkdown::render(here::here("analysis","final_report.Rmd"), params = list(
state = "nj",
download_raw_data = TRUE
))
file.exists(here::here("data", "raw.Rdata"))
params$download_raw_data
file.exists(here::here("data", "raw.Rdata")
)
file.exists(here::here("data", "clean.Rdata")
)
here("source", "01_data_download.R")
library(tidyverse)
library(here)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.width = 9,
fig.height = 6,
fig.path = "../results/"
)
theme_set(theme_bw() + theme(legend.position = "bottom"))
here("source", "01_data_download.R")
